#%RAML 0.8
---
title: API AMT Project_1
baseUri: https://localhost/api/{version}
version: v1
protocols: [HTTPS]
mediaType: application/json

traits:
  - private: !include _traits/private.raml

/facts:
  description: List of a Facts.
  post:
    description: Create a fact. More text is only rendered in the details view of the method.
    body:
      application/json:
        example: |
          { "name" : "Fact" }
    responses:
      201:
        body:
          application/json:
            example: |
              { "id" : 1, "name" : "Fact" }
    headers:
      Authorization:
        description: |
          A description.
          <private>
          Note that you can also add `<private>` blocks in here.
          </private>

  /{factId}:
    get:
      description: Retrieve a fact.
      responses:
        200:
          body:
            application/json:
              example: |
                { "id" : 1, "name" : "Fact" }
        404:
          description: The fact was not found.
    put:
      description: Update a fact
    delete:
      is: [private]
      description: Delete a sensor.

/observations:
  description: List of observations.
  get:
    description: list of observations
    body:
      application/json:
        example: |
          { "name" : "obsX" }

  /{observationId}:
    get:
      description: Retrieve an observation.
      responses:
        200:
          body:
            application/json:
              example: |
                { "id" : 1, "name" : "obsY" }
        404:
          description: The fact was not found.
/sensors:
  description: This is the list of available sensors.
  /{sensorId}:
    get:
      description: Retrieve a sensor.
      responses:
        200:
          body:
            application/json:
              example: |
                { "id" : 1, "name" : "SensorName" }
        404:
          description: The sensor was not found.
    put:
      description: update a sensor
    delete:
      is: [private]
      description: Delete a sensor.
  post:
    description: create sensor