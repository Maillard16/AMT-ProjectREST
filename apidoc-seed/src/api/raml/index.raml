#%RAML 0.8
---
title: API AMT Project_1
baseUri: https://localhost/api/{version}
version: v1
protocols: [HTTPS]
mediaType: application/json

traits:
  - private: !include _traits/private.raml

/sensors:
  description: Sensor's list
  post:
    description: Create a sensor.
    body:
      application/json:
        example: |
          {name" : "Sensor1", "description" : "HEIG-VD's temperature sensor", "type" : "thermometer", "visibility" : "public"}
    responses:
      201:
        body:
          application/json:
            example: |
              {"id" : 5, "sensorName" : "Sensor1", "description" : "HEIG-VD's temperature sensor", "type" : "thermometer", "visibility" : "public"}
  /{sensorId}:
    get:
      description: Retrieve a sensor.
      responses:
        200:
          body:
            application/json:
              example: |
                {"id" : 5, "sensorName" : "Sensor1", "description" : "HEIG-VD's temperature sensor", "type" : "thermometer", "visibility" : "public"}
        404:
          description: Sensor not found
    put:
      description: Update a sensor
      body:
        application/json:
          example: |
            {"sensorName" : "Sensor1", "description" : "HEIG-VD's temperature sensor", "type" : "thermometer", "visibility" : "public"}
      responses:
        201:
          body:
            application/json:
              example: |
                {"id" : 5, "sensorName" : "Sensor1", "description" : "HEIG-VD's temperature sensor", "type" : "thermometer", "visibility" : "public"}
    delete:
        is: [private]
        description: |
          Delete a sensor
        responses:
          204:
            description: |
              Succesfully deleted sensor
/observations:
  description: Observation's list.
  post:
    description: Create an observation
    body:
      application/json:
        example: |
          {"time" : "yyyy-mm-ddThh:mm:ssZ", "value" : 123, "sensorId" : 1}
    responses:
      201:
        body:
          application/json:
            example: |
              {"id" : 1, "time" : "yyyy-mm-ddThh:mm:ssZ", "value" : 123, "sensorId" : 1}
  /{observationId}:
    get:
      description: Retrieve one observation
      responses:
        200:
          body:
            application/json:
              example: |
                {"id" : 1, "time" : "yyyy-mm-ddThh:mm:ssZ", "value" : 123, "sensorId" : 1}
        404:
          description: Observation not found
    delete:
        is: [private]
        description: |
          Delete an observation
        responses:
          204:
            description: |
              Succesfully deleted observation

/facts:
  description: Fact's list.
  post:
    description: Create a fact.
    body:
      application/json:
        example: |
          {"info" : "Average temperature in Lausanne is 20°C", "type" : "Temperature", "visibility" : "public"}
    responses:
      201:
        body:
          application/json:
            example: |
              {"id" : 20, "info" : "Average temperature in Lausanne is 20°C", "type" : "Temperature", "visibility" : "public"}
  /{factId}:
    get:
      description: Retrieve a fact.
      responses:
        200:
          body:
            application/json:
              example: |
                {"id" : 20, "info" : "Average temperature in Lausanne is 20°C", "type" : "Temperature", "visibility" : "public"}
        404:
          description: The fact was not found.
    put:
      description: Update a fact.
      body:
        application/json:
          example: |
            {"info" : "The average temperature on Yverdon for 2013 is 20°C", "type" : "Temperature", "visibility" : "public"}
      responses:
        201:
          body:
            application/json:
              example: |
                {"id" : 20, "info" : "The average temperature on Yverdon for 2013 is 20°C", "type" : "Temperature", "visibility" : "public"}
    delete:
        is: [private]
        description: Delete a fact
        responses:
          204:
            description: |
              Succesfully deleted fact

/users:
  description: User's list.
  get:
    is: [private]
    description: Retrieve all users.
    responses:
      200:
        body:
          application/json:
            example: |
              {"id" : 1, "username" : "Username1", "email" : "mail@mail.com", "organisationId" : 1}
  post:
    description: Create a new user.
    body:
      application/json:
        example: |
          {"username" : "Username1", "password" : "UserPassword", "email" : "mail@mail.com", "organisationId" : 1}
    responses:
      201:
        body:
          application/json:
            example: |
              {"id" : 1, "username" : "Username1", "password" : "UserPassword", "email" : "mail@mail.com", "organisationId" : 1}
  /{userId}:
    get:
      description: Retrieve one user.
      responses:
        200:
          body:
            application/json:
              example: |
                {"id" : 1, "username" : "Username1", "email" : "mail@mail.com", "organisationId" : 1}
        404:
          description: User not found.
    put:
      description: Update user.
      body:
        application/json:
          example: |
            {"password" : "UserPassword", "email" : "mail@mail.com", "organisationId" : 1}
      responses:
        201:
          body:
            application/json:
              example: |
                {"id" : 1, "username" : "NewUserName", "password" : "NewPassword", "email" : "mail@mail.com", "organisationId" : 4}
    delete:
      is: [private]
      description: |
        Delete user
      responses:
        204:
          description: |
            Succesfully deleted user

/organisations:
  description: Organisation's list.
  get:
    is: [private]
    description: Retrieve all organisations.
    responses:
      200:
        body:
          application/json:
            example: |
              {"id" : 1, "organisationName" : "OrganisationName", "contactUserId" : 1}
  post:
    description: Create a new organisation.
    body:
      application/json:
        example: |
          {"organisationName" : "OrganisationName", "contactUserId" : 4}
    responses:
      201:
        body:
          application/json:
            example: |
              {"id" : 3, "OrganisationName", "contactUserId" : 4}
  /{organisationId}:
    get:
      description: Retrieve an organisation.
      responses:
        200:
          body:
            application/json:
              example: |
                {"id" : 1, "organisationName" : "OrganisationName", "contactUserId" : 1}
        404:
          description: Organisation not found.
    put:
      description: Update organisation infos.
      body:
        application/json:
          example: |
            {"organisationName" : "NewOrganisationName", "contactUserId" : 1}
      responses:
        201:
          body:
            application/json:
              example: |
                {"id" : 1, "organisationName" : "NewOrganisationName", "contactUserId" : 1}
    delete:
      is: [private]
      description: |
        Delete organisation
      responses:
        204:
          description: |
            Succesfully deleted organisation