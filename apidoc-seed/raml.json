{
	"title": "API AMT Project_1",
	"baseUri": "https://localhost/api/{version}",
	"version": "v1",
	"protocols": [
		"HTTPS"
	],
	"mediaType": "application/json",
	"traits": [
		{
			"private": {
				"usage": "Just a marker that a resource of method is not part of the public API."
			}
		}
	],
	"resources": [
		{
			"description": "List of a Facts.",
			"relativeUri": "/facts",
			"methods": [
				{
					"description": "Create a fact. More text is only rendered in the details view of the method.",
					"body": {
						"application/json": {
							"example": "{ \"name\" : \"Fact\" }\n"
						}
					},
					"responses": {
						"201": {
							"body": {
								"application/json": {
									"example": "{ \"id\" : 1, \"name\" : \"Fact\" }\n"
								}
							}
						}
					},
					"headers": {
						"Authorization": {
							"description": "A description.\n<private>\nNote that you can also add `<private>` blocks in here.\n</private>\n",
							"displayName": "Authorization",
							"type": "string"
						}
					},
					"protocols": [
						"HTTPS"
					],
					"method": "post"
				}
			],
			"resources": [
				{
					"relativeUri": "/{factId}",
					"methods": [
						{
							"description": "Retrieve a fact.",
							"responses": {
								"200": {
									"body": {
										"application/json": {
											"example": "{ \"id\" : 1, \"name\" : \"Fact\" }\n"
										}
									}
								},
								"404": {
									"description": "The fact was not found."
								}
							},
							"method": "get"
						},
						{
							"description": "Update a fact",
							"method": "put"
						},
						{
							"is": [
								"private"
							],
							"description": "Delete a sensor.",
							"method": "delete"
						}
					],
					"relativeUriPathSegments": [
						"{factId}"
					],
					"uriParameters": {
						"factId": {
							"type": "string",
							"required": true,
							"displayName": "factId"
						}
					}
				}
			],
			"relativeUriPathSegments": [
				"facts"
			]
		},
		{
			"description": "List of observations.",
			"relativeUri": "/observations",
			"methods": [
				{
					"description": "list of observations",
					"body": {
						"application/json": {
							"example": "{ \"name\" : \"obsX\" }\n"
						}
					},
					"protocols": [
						"HTTPS"
					],
					"method": "get"
				}
			],
			"resources": [
				{
					"relativeUri": "/{observationId}",
					"methods": [
						{
							"description": "Retrieve an observation.",
							"responses": {
								"200": {
									"body": {
										"application/json": {
											"example": "{ \"id\" : 1, \"name\" : \"obsY\" }\n"
										}
									}
								},
								"404": {
									"description": "The fact was not found."
								}
							},
							"method": "get"
						}
					],
					"relativeUriPathSegments": [
						"{observationId}"
					],
					"uriParameters": {
						"observationId": {
							"type": "string",
							"required": true,
							"displayName": "observationId"
						}
					}
				}
			],
			"relativeUriPathSegments": [
				"observations"
			]
		},
		{
			"description": "This is the list of available sensors.",
			"relativeUri": "/sensors",
			"methods": [
				{
					"description": "create sensor",
					"protocols": [
						"HTTPS"
					],
					"method": "post"
				}
			],
			"resources": [
				{
					"relativeUri": "/{sensorId}",
					"methods": [
						{
							"description": "Retrieve a sensor.",
							"responses": {
								"200": {
									"body": {
										"application/json": {
											"example": "{ \"id\" : 1, \"name\" : \"SensorName\" }\n"
										}
									}
								},
								"404": {
									"description": "The sensor was not found."
								}
							},
							"method": "get"
						},
						{
							"description": "update a sensor",
							"method": "put"
						},
						{
							"is": [
								"private"
							],
							"description": "Delete a sensor.",
							"method": "delete"
						}
					],
					"relativeUriPathSegments": [
						"{sensorId}"
					],
					"uriParameters": {
						"sensorId": {
							"type": "string",
							"required": true,
							"displayName": "sensorId"
						}
					}
				}
			],
			"relativeUriPathSegments": [
				"sensors"
			]
		}
	],
	"baseUriParameters": {
		"version": {
			"type": "string",
			"required": true,
			"displayName": "version",
			"enum": [
				"v1"
			]
		}
	}
}